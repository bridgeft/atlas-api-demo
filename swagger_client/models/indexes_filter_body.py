# coding: utf-8

"""
    Atlas API

    RESTful API for controlling and interacting with Atlas data  # noqa: E501

    OpenAPI spec version: 2.6.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IndexesFilterBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'internal_name': 'str',
        'vendor_name': 'str',
        'cusip': 'str',
        'symbol': 'str',
        'issuer_cusip': 'str',
        'name': 'str'
    }

    attribute_map = {
        'id': 'id',
        'internal_name': 'internal_name',
        'vendor_name': 'vendor_name',
        'cusip': 'cusip',
        'symbol': 'symbol',
        'issuer_cusip': 'issuer_cusip',
        'name': 'name'
    }

    def __init__(self, id=None, internal_name=None, vendor_name=None, cusip=None, symbol=None, issuer_cusip=None, name=None):  # noqa: E501
        """IndexesFilterBody - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._internal_name = None
        self._vendor_name = None
        self._cusip = None
        self._symbol = None
        self._issuer_cusip = None
        self._name = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if internal_name is not None:
            self.internal_name = internal_name
        if vendor_name is not None:
            self.vendor_name = vendor_name
        if cusip is not None:
            self.cusip = cusip
        if symbol is not None:
            self.symbol = symbol
        if issuer_cusip is not None:
            self.issuer_cusip = issuer_cusip
        if name is not None:
            self.name = name

    @property
    def id(self):
        """Gets the id of this IndexesFilterBody.  # noqa: E501

        The unique resource id of the Index.  # noqa: E501

        :return: The id of this IndexesFilterBody.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IndexesFilterBody.

        The unique resource id of the Index.  # noqa: E501

        :param id: The id of this IndexesFilterBody.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def internal_name(self):
        """Gets the internal_name of this IndexesFilterBody.  # noqa: E501

        Our internal name for the index.  # noqa: E501

        :return: The internal_name of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._internal_name

    @internal_name.setter
    def internal_name(self, internal_name):
        """Sets the internal_name of this IndexesFilterBody.

        Our internal name for the index.  # noqa: E501

        :param internal_name: The internal_name of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._internal_name = internal_name

    @property
    def vendor_name(self):
        """Gets the vendor_name of this IndexesFilterBody.  # noqa: E501

        Vendor's name of the index.  # noqa: E501

        :return: The vendor_name of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this IndexesFilterBody.

        Vendor's name of the index.  # noqa: E501

        :param vendor_name: The vendor_name of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._vendor_name = vendor_name

    @property
    def cusip(self):
        """Gets the cusip of this IndexesFilterBody.  # noqa: E501

        Cusip associated with the index  # noqa: E501

        :return: The cusip of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._cusip

    @cusip.setter
    def cusip(self, cusip):
        """Sets the cusip of this IndexesFilterBody.

        Cusip associated with the index  # noqa: E501

        :param cusip: The cusip of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._cusip = cusip

    @property
    def symbol(self):
        """Gets the symbol of this IndexesFilterBody.  # noqa: E501

        Symbol associated with the index  # noqa: E501

        :return: The symbol of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this IndexesFilterBody.

        Symbol associated with the index  # noqa: E501

        :param symbol: The symbol of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._symbol = symbol

    @property
    def issuer_cusip(self):
        """Gets the issuer_cusip of this IndexesFilterBody.  # noqa: E501

        Issuer cusip associated with the index  # noqa: E501

        :return: The issuer_cusip of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._issuer_cusip

    @issuer_cusip.setter
    def issuer_cusip(self, issuer_cusip):
        """Sets the issuer_cusip of this IndexesFilterBody.

        Issuer cusip associated with the index  # noqa: E501

        :param issuer_cusip: The issuer_cusip of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._issuer_cusip = issuer_cusip

    @property
    def name(self):
        """Gets the name of this IndexesFilterBody.  # noqa: E501

        Name for the index  # noqa: E501

        :return: The name of this IndexesFilterBody.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IndexesFilterBody.

        Name for the index  # noqa: E501

        :param name: The name of this IndexesFilterBody.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IndexesFilterBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IndexesFilterBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
