# coding: utf-8

"""
    Atlas API

    RESTful API for controlling and interacting with Atlas data  # noqa: E501

    OpenAPI spec version: 2.6.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20045(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'benchmark_id': 'int',
        '_date': 'datetime',
        'mtd_return': 'float',
        'qtd_return': 'float',
        'ytd_return': 'float',
        'itd_return': 'float',
        'itd_annual_return': 'float',
        'one_yr_return': 'float',
        'three_yr_return': 'float',
        'five_yr_return': 'float'
    }

    attribute_map = {
        'name': 'name',
        'benchmark_id': 'benchmark_id',
        '_date': 'date',
        'mtd_return': 'mtd_return',
        'qtd_return': 'qtd_return',
        'ytd_return': 'ytd_return',
        'itd_return': 'itd_return',
        'itd_annual_return': 'itd_annual_return',
        'one_yr_return': 'one_yr_return',
        'three_yr_return': 'three_yr_return',
        'five_yr_return': 'five_yr_return'
    }

    def __init__(self, name=None, benchmark_id=None, _date=None, mtd_return=None, qtd_return=None, ytd_return=None, itd_return=None, itd_annual_return=None, one_yr_return=None, three_yr_return=None, five_yr_return=None):  # noqa: E501
        """InlineResponse20045 - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._benchmark_id = None
        self.__date = None
        self._mtd_return = None
        self._qtd_return = None
        self._ytd_return = None
        self._itd_return = None
        self._itd_annual_return = None
        self._one_yr_return = None
        self._three_yr_return = None
        self._five_yr_return = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if benchmark_id is not None:
            self.benchmark_id = benchmark_id
        if _date is not None:
            self._date = _date
        if mtd_return is not None:
            self.mtd_return = mtd_return
        if qtd_return is not None:
            self.qtd_return = qtd_return
        if ytd_return is not None:
            self.ytd_return = ytd_return
        if itd_return is not None:
            self.itd_return = itd_return
        if itd_annual_return is not None:
            self.itd_annual_return = itd_annual_return
        if one_yr_return is not None:
            self.one_yr_return = one_yr_return
        if three_yr_return is not None:
            self.three_yr_return = three_yr_return
        if five_yr_return is not None:
            self.five_yr_return = five_yr_return

    @property
    def name(self):
        """Gets the name of this InlineResponse20045.  # noqa: E501

        Name for the benchmark object  # noqa: E501

        :return: The name of this InlineResponse20045.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20045.

        Name for the benchmark object  # noqa: E501

        :param name: The name of this InlineResponse20045.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def benchmark_id(self):
        """Gets the benchmark_id of this InlineResponse20045.  # noqa: E501

        ID for the benchmakr object  # noqa: E501

        :return: The benchmark_id of this InlineResponse20045.  # noqa: E501
        :rtype: int
        """
        return self._benchmark_id

    @benchmark_id.setter
    def benchmark_id(self, benchmark_id):
        """Sets the benchmark_id of this InlineResponse20045.

        ID for the benchmakr object  # noqa: E501

        :param benchmark_id: The benchmark_id of this InlineResponse20045.  # noqa: E501
        :type: int
        """

        self._benchmark_id = benchmark_id

    @property
    def _date(self):
        """Gets the _date of this InlineResponse20045.  # noqa: E501

        Date for which the benchmark is calculated  # noqa: E501

        :return: The _date of this InlineResponse20045.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this InlineResponse20045.

        Date for which the benchmark is calculated  # noqa: E501

        :param _date: The _date of this InlineResponse20045.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def mtd_return(self):
        """Gets the mtd_return of this InlineResponse20045.  # noqa: E501

        Benchmark month to date return, percentage scale  # noqa: E501

        :return: The mtd_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._mtd_return

    @mtd_return.setter
    def mtd_return(self, mtd_return):
        """Sets the mtd_return of this InlineResponse20045.

        Benchmark month to date return, percentage scale  # noqa: E501

        :param mtd_return: The mtd_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._mtd_return = mtd_return

    @property
    def qtd_return(self):
        """Gets the qtd_return of this InlineResponse20045.  # noqa: E501

        Benchmark quarter to date return, percentage scale  # noqa: E501

        :return: The qtd_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._qtd_return

    @qtd_return.setter
    def qtd_return(self, qtd_return):
        """Sets the qtd_return of this InlineResponse20045.

        Benchmark quarter to date return, percentage scale  # noqa: E501

        :param qtd_return: The qtd_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._qtd_return = qtd_return

    @property
    def ytd_return(self):
        """Gets the ytd_return of this InlineResponse20045.  # noqa: E501

        Benchmark year to date return, percentage scale  # noqa: E501

        :return: The ytd_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._ytd_return

    @ytd_return.setter
    def ytd_return(self, ytd_return):
        """Sets the ytd_return of this InlineResponse20045.

        Benchmark year to date return, percentage scale  # noqa: E501

        :param ytd_return: The ytd_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._ytd_return = ytd_return

    @property
    def itd_return(self):
        """Gets the itd_return of this InlineResponse20045.  # noqa: E501

        Benchmark inception to date return, percentage scale  # noqa: E501

        :return: The itd_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._itd_return

    @itd_return.setter
    def itd_return(self, itd_return):
        """Sets the itd_return of this InlineResponse20045.

        Benchmark inception to date return, percentage scale  # noqa: E501

        :param itd_return: The itd_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._itd_return = itd_return

    @property
    def itd_annual_return(self):
        """Gets the itd_annual_return of this InlineResponse20045.  # noqa: E501

        Benchmark inception to date annualized return, percentage scale  # noqa: E501

        :return: The itd_annual_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._itd_annual_return

    @itd_annual_return.setter
    def itd_annual_return(self, itd_annual_return):
        """Sets the itd_annual_return of this InlineResponse20045.

        Benchmark inception to date annualized return, percentage scale  # noqa: E501

        :param itd_annual_return: The itd_annual_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._itd_annual_return = itd_annual_return

    @property
    def one_yr_return(self):
        """Gets the one_yr_return of this InlineResponse20045.  # noqa: E501

        Benchmark one year return, percentage scale  # noqa: E501

        :return: The one_yr_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._one_yr_return

    @one_yr_return.setter
    def one_yr_return(self, one_yr_return):
        """Sets the one_yr_return of this InlineResponse20045.

        Benchmark one year return, percentage scale  # noqa: E501

        :param one_yr_return: The one_yr_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._one_yr_return = one_yr_return

    @property
    def three_yr_return(self):
        """Gets the three_yr_return of this InlineResponse20045.  # noqa: E501

        Benchmark three year return, percentage scale  # noqa: E501

        :return: The three_yr_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._three_yr_return

    @three_yr_return.setter
    def three_yr_return(self, three_yr_return):
        """Sets the three_yr_return of this InlineResponse20045.

        Benchmark three year return, percentage scale  # noqa: E501

        :param three_yr_return: The three_yr_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._three_yr_return = three_yr_return

    @property
    def five_yr_return(self):
        """Gets the five_yr_return of this InlineResponse20045.  # noqa: E501

        Benchmark five year return, percentage scale  # noqa: E501

        :return: The five_yr_return of this InlineResponse20045.  # noqa: E501
        :rtype: float
        """
        return self._five_yr_return

    @five_yr_return.setter
    def five_yr_return(self, five_yr_return):
        """Sets the five_yr_return of this InlineResponse20045.

        Benchmark five year return, percentage scale  # noqa: E501

        :param five_yr_return: The five_yr_return of this InlineResponse20045.  # noqa: E501
        :type: float
        """

        self._five_yr_return = five_yr_return

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20045, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20045):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
